proxy_cache_path /var/opt/nginx/cache/elements levels=1:2 keys_zone=elements:64m max_size=512m;

# Load balancer (api.{{ loadbalance.env.base_fqdn }} and console.{{ loadbalance.env.base_fqdn }}).
upstream elements {
{% for a in groups.app %}
  server {{ hostvars[a].ansible_eth0.ipv4.address }}:8080 weight=1 max_fails=2 fail_timeout=2s;
{% endfor %}
}

# HTTP server ({{ loadbalance.env.base_fqdn }}).
server {
  listen 80;
  server_name {{ loadbalance.env.base_fqdn }};

  if ($available = 0) {
    return 503;
  }

  return 301 https://console.{{ loadbalance.env.base_fqdn }}$request_uri;
}

# HTTPS server ({{ loadbalance.env.base_fqdn }}).
server {
  listen 443 ssl;
  server_name {{ loadbalance.env.base_fqdn }};

  ssl on;
  ssl_certificate /etc/opt/nginx/tls/elements.base.pem;
  ssl_certificate_key /etc/opt/nginx/tls/elements.base.key;

  if ($available = 0) {
    return 503;
  }

  return 301 https://console.{{ loadbalance.env.base_fqdn }}$request_uri;
}

# HTTP server (api.{{ loadbalance.env.base_fqdn }} and console.{{ loadbalance.env.base_fqdn }}).
server {
  listen 80;
  server_name api.{{ loadbalance.env.base_fqdn }} console.{{ loadbalance.env.base_fqdn }};

  if ($available = 0) {
    return 503;
  }

  return 301 https://$host$request_uri;
}

# HTTPS server (api.{{ loadbalance.env.base_fqdn }}).
server {
  listen 443 ssl;
  server_name api.{{ loadbalance.env.base_fqdn }};

  ssl on;
  ssl_certificate /etc/opt/nginx/tls/elements.api.pem;
  ssl_certificate_key /etc/opt/nginx/tls/elements.api.key;

  access_log /var/opt/nginx/log/sites/elements.access.log elementslog;
  error_log /var/opt/nginx/log/sites/elements.error.log error;

  if ($available = 0) {
    return 503;
  }

  location /nginx-status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  location ~* \.(ico|js|css|png|gif|jpe?g)$ {
    proxy_pass http://elements;
    proxy_cache elements;
    proxy_cache_key "$request_uri";
    proxy_ignore_headers Cache-control;

    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    expires 1h;
  }

  location / {
    proxy_pass http://elements;
  }

  rewrite ^/$ /elements/jsp/home.jsp;
  rewrite ^/elements[/]*$ /elements/jsp/home.jsp;
}

# HTTPS server (console.{{ loadbalance.env.base_fqdn }}).
server {
  listen 443 ssl;
  server_name console.{{ loadbalance.env.base_fqdn }};

  ssl on;
  ssl_certificate /etc/opt/nginx/tls/elements.console.pem;
  ssl_certificate_key /etc/opt/nginx/tls/elements.console.key;

  access_log /var/opt/nginx/log/sites/elements.access.log elementslog;
  error_log /var/opt/nginx/log/sites/elements.error.log error;

  if ($available = 0) {
    return 503;
  }

  location /nginx-status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  location ~* \.(ico|js|css|png|gif|jpe?g)$ {
    proxy_pass http://elements;
    proxy_cache elements;
    proxy_cache_key "$request_uri";
    proxy_ignore_headers Cache-control;

    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    expires 1h;
  }

  location / {
    proxy_pass http://elements;
  }

  rewrite ^/$ /elements/jsp/home.jsp;
  rewrite ^/elements[/]*$ /elements/jsp/home.jsp;
}
{% for a in groups.app %}

# HTTP server configuration for host (api.{{ hostvars[a].ansible_fqdn }} and console.{{ hostvars[a].ansible_fqdn }}).
server {
  listen 80;
  server_name api.{{ hostvars[a].ansible_fqdn }} console.{{ hostvars[a].ansible_fqdn }};

  if ($available = 0) {
    return 503;
  }

  return 301 https://$host$request_uri;
}

# HTTPS server configuration for host (api.{{ hostvars[a].ansible_fqdn }}).
server {
  listen 443 ssl;
  server_name api.{{ hostvars[a].ansible_fqdn }};

  ssl on;
  ssl_certificate /etc/opt/nginx/tls/elements.api.pem;
  ssl_certificate_key /etc/opt/nginx/tls/elements.api.key;

  access_log /var/opt/nginx/log/sites/elements.access.log elementslog;
  error_log /var/opt/nginx/log/sites/elements.error.log error;

  if ($available = 0) {
    return 503;
  }

  location /nginx-status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  location ~* \.(ico|js|css|png|gif|jpe?g)$ {
    proxy_pass http://elements;
    proxy_cache elements;
    proxy_cache_key "$request_uri";
    proxy_ignore_headers Cache-control;

    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    expires 1h;
  }

  location / {
    proxy_pass http://elements;
  }

  rewrite ^/$ /elements/jsp/home.jsp;
  rewrite ^/elements[/]*$ /elements/jsp/home.jsp;
}

# HTTPS server configuration for host (console.{{ hostvars[a].ansible_fqdn }}).
server {
  listen 443 ssl;
  server_name console.{{ hostvars[a].ansible_fqdn }};

  ssl on;
  ssl_certificate /etc/opt/nginx/tls/elements.console.pem;
  ssl_certificate_key /etc/opt/nginx/tls/elements.console.key;

  access_log /var/opt/nginx/log/sites/elements.access.log elementslog;
  error_log /var/opt/nginx/log/sites/elements.error.log error;

  if ($available = 0) {
    return 503;
  }

  location /nginx-status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  location ~* \.(ico|js|css|png|gif|jpe?g)$ {
    proxy_pass http://elements;
    proxy_cache elements;
    proxy_cache_key "$request_uri";
    proxy_ignore_headers Cache-control;

    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    expires 1h;
  }

  location / {
    proxy_pass http://elements;
  }

  rewrite ^/$ /elements/jsp/home.jsp;
  rewrite ^/elements[/]*$ /elements/jsp/home.jsp;
}
{% endfor %}
